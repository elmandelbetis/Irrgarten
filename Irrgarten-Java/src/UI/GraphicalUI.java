/**
 * @file UI/GraphicalUI.java
 * @author Álvaro Maldonado Medina, grupo: 2D-D3
 * @brief Interfaz gráfica del juego
 */

package UI;

import controller.Cursors;
import irrgarten.Directions;
import irrgarten.GameState;

public class GraphicalUI extends javax.swing.JFrame implements UI{
    
    private Cursors cursors;
    
    /**
     * Creates new form GraphicalUI
     */
    public GraphicalUI() {
        initComponents();
        this.setVisible(true);
        cursors = new Cursors(this,true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nombre_Juego = new javax.swing.JLabel();
        jugadorActual = new javax.swing.JLabel();
        Winner = new javax.swing.JLabel();
        playerList = new javax.swing.JLabel();
        monsterList = new javax.swing.JLabel();
        logs = new javax.swing.JLabel();
        labyrinthState = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        monstersArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        playersArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        currentPlayer = new javax.swing.JTextField();
        haveAWinner = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        labyrinthArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Nombre_Juego.setFont(new java.awt.Font("Dhurjati", 1, 24)); // NOI18N
        Nombre_Juego.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Nombre_Juego.setText("IRRGARTEN");
        Nombre_Juego.setToolTipText("");

        jugadorActual.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        jugadorActual.setText("Jugador Actual:");

        Winner.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        Winner.setText("Ganador?:");

        playerList.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        playerList.setText("Jugadores:");

        monsterList.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        monsterList.setText("Monstruos:");

        logs.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        logs.setText("Log:");

        labyrinthState.setFont(new java.awt.Font("Dhurjati", 0, 20)); // NOI18N
        labyrinthState.setText("Laberinto:");

        monstersArea.setColumns(20);
        monstersArea.setRows(5);
        jScrollPane1.setViewportView(monstersArea);

        playersArea.setColumns(20);
        playersArea.setRows(5);
        jScrollPane2.setViewportView(playersArea);

        logArea.setColumns(20);
        logArea.setFont(new java.awt.Font("FreeMono", 0, 17)); // NOI18N
        logArea.setRows(5);
        jScrollPane3.setViewportView(logArea);

        labyrinthArea.setColumns(20);
        labyrinthArea.setFont(new java.awt.Font("Liberation Mono", 0, 16)); // NOI18N
        labyrinthArea.setRows(5);
        jScrollPane4.setViewportView(labyrinthArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(Nombre_Juego, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(logs)
                                    .addComponent(monsterList))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labyrinthState)))
                            .addComponent(playerList)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jugadorActual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Winner)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(haveAWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Nombre_Juego, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jugadorActual)
                    .addComponent(Winner)
                    .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(haveAWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(playerList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labyrinthState)
                    .addComponent(monsterList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Método nextMove() que devuelve la dirección comandada por el cursor y mueve al jugador
    @Override
    public Directions nextMove() {
        return cursors.getDirection();
    }

    @Override
    public void showGame(GameState gameState) {
        
        // Mostrar Laberinto
        labyrinthArea.setText(gameState.getLabyrinth());
        
        // Mostrar jugadores
        playersArea.setText(gameState.getPlayers());
        
        // Mostrar monstruos
        monstersArea.setText(gameState.getMonsters());
        
        // Mostrar jugador actual
        currentPlayer.setText(Integer.toString(gameState.getCurrentPlayer()));
        
        // Mostrar si hay ganador      
        if (gameState.getWinner())
            haveAWinner.setText("Sí, jugador "+gameState.getCurrentPlayer());
        else
            haveAWinner.setText("No");
        
        // Mostrar log
        logArea.setText(gameState.getLog());
        
        // Actualizar los elementos gráficos
        repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Nombre_Juego;
    private javax.swing.JLabel Winner;
    private javax.swing.JTextField currentPlayer;
    private javax.swing.JTextField haveAWinner;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel jugadorActual;
    private javax.swing.JTextArea labyrinthArea;
    private javax.swing.JLabel labyrinthState;
    private javax.swing.JTextArea logArea;
    private javax.swing.JLabel logs;
    private javax.swing.JLabel monsterList;
    private javax.swing.JTextArea monstersArea;
    private javax.swing.JLabel playerList;
    private javax.swing.JTextArea playersArea;
    // End of variables declaration//GEN-END:variables
}
